parameters:
  DotNetFrameworkPackagesToPack: ''
  DotNetStandardPackagesToPack: ''
  IncludeReferencedProject: false

steps:
- task: PowerShell@2
  displayName: 'Set NuGet Package Version'
  inputs:
    targetType: inline
    script: |
      if ("$(GitVersion.PreReleaseLabel)" -ne "") { $NuGetPackageVersion = "$(GitVersion.MajorMinorPatch)-prerelease-$(PreReleaseNumber)" } else { $NuGetPackageVersion = "$(GitVersion.MajorMinorPatch)" }
      Write-Host "NuGetPackageVersion: $NuGetPackageVersion"
      Write-Host "##vso[task.setvariable variable=NuGetPackageVersion]$NuGetPackageVersion"
- task: DotNetCoreCLI@2
  condition: ne('${{ parameters.DotNetStandardPackagesToPack }}', '')
  displayName: 'dotnet pack'
  inputs:
    command: pack
    packagesToPack: ${{ parameters.DotNetStandardPackagesToPack }}
    versioningScheme: byEnvVar
    versionEnvVar: NuGetPackageVersion
    packDirectory: $(build.artifactstagingdirectory)/NuGetPackages
- task: NuGetCommand@2
  condition: ne('${{ parameters.DotNetFrameworkPackagesToPack }}', '')
  displayName: 'NuGet pack'
  inputs:
    command: pack
    packagesToPack: ${{ parameters.DotNetFrameworkPackagesToPack }}
    versioningScheme: byEnvVar
    versionEnvVar: NuGetPackageVersion
    packDestination: $(build.artifactstagingdirectory)/NuGetPackages
    includeReferencedProjects: ${{ parameters.IncludeReferencedProject }}
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: NuGetPackages'
  inputs:
    ArtifactName: NuGetPackages
    pathtoPublish: '$(build.artifactstagingdirectory)/NuGetPackages'
