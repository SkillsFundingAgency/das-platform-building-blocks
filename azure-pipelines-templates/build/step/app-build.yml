parameters:
  # if SonarCloud set to true you will need to manually create the project in SonarCloud by clicking '+' then 'Analyze new project` in https://sonarcloud.io/organizations/educationandskillsfundingagency/projects
  SonarCloud: false
  SonarCloudExtraProperties:
  SonarCloudProjectKey:
  RunAcceptanceTests: false

steps:
- task: SonarCloudPrepare@1
  displayName: Prepare SonarCloud analysis configuration
  condition: and(succeeded(), eq(${{ parameters.SonarCloud }}, true))
  inputs:
    SonarCloud: ESFA - SonarCloud
    organization: $(SonarCloudOrganisationKey)
    scannerMode: MSBuild
    projectName: "$(Build.DefinitionName)"
    projectKey: "${{ parameters.SonarCloudProjectKey }}"
    extraProperties: |
      sonar.exclusions=**/obj/**,**/*.dll
      sonar.cs.xunit.reportsPaths=$(Agent.TempDirectory)/**/XUnit.TestResults.xml 
      sonar.cs.opencover.reportsPaths=$(Agent.TempDirectory)/**/opencoverCoverage.xml

- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: restore
    projects: 'src/**/*.csproj'
    noCache: true

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    projects: 'src/**/*.csproj'
    arguments: '--configuration $(buildConfiguration) --no-restore'

- task: DotNetCoreCLI@2
  displayName: Unit Tests
  inputs:
    command: test
    projects: '**/*.UnitTests.csproj'
    arguments: '--configuration $(buildConfiguration) --no-build /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput=$(Agent.TempDirectory)/coverage/ /p:MergeWith=$(Agent.TempDirectory)/coverage/ --collect "Code coverage"'

- task: DotNetCoreCLI@2
  displayName: Acceptance Tests
  condition: ${{ parameters.RunAcceptanceTests }}
  inputs:
    command: test
    projects: '**/*.AcceptanceTests.csproj'
    arguments: '--configuration $(buildConfiguration) --no-build'

- task: PublishTestResults@2
  displayName: "Publish Test Results"
  inputs:
    testResultsFormat: VSTest
    testResultsFiles: "$(Agent.TempDirectory)/**.*trx"
    mergeTestResults: true
    condition: succeededOrFailed()

- task: SonarCloudAnalyze@1
  displayName: Run SonarCloud analysis
  condition: and(succeeded(), eq(${{ parameters.SonarCloud }}, true))

- task: SonarCloudPublish@1
  displayName: Publish SonarCloud analysis results on build summary
  condition: and(succeeded(), eq(${{ parameters.SonarCloud }}, true))
  inputs:
    pollingTimeoutSec: '300'
