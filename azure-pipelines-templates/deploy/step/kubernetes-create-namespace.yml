parameters:
  AksResourceGroupName:
  AzureSubscription:
  AksClusterName:
  Namespace:
  Validate: false
  IsMultiRepoCheckout: true

steps:
- checkout: das-platform-automation
- task: Kubernetes@1
  displayName: kubectl get namespaces
  name: GetNamespaces
  inputs:
    connectionType: Azure Resource Manager
    azureSubscriptionEndpoint: ${{ parameters.AzureSubscription }}
    azureResourceGroup: ${{ parameters.AksResourceGroupName }}
    kubernetesCluster: ${{ parameters.AksClusterName }}
    useClusterAdmin: true
    command: 'get'
    arguments: 'namespace'
- task: PowerShell@2
  displayName: 'PowerShell: Test-KubernetesNamespaceExists.ps1'
  inputs:
    targetType: 'filePath'
    ${{ if eq(parameters.IsMultiRepoCheckout, true) }}:
      filePath: das-platform-automation/Infrastructure-Scripts/Test-KubernetesNamespaceExists.ps1
    ${{ if eq(parameters.IsMultiRepoCheckout, false) }}:
      filePath: Infrastructure-Scripts/Test-KubernetesNamespaceExists.ps1
    arguments: -KubectlOutput '$(GetNamespaces.KubectlOutput)' -Namespace ${{ parameters.Namespace }} -Verbose
- task: Kubernetes@1
  displayName: kubectl create ${{ parameters.Namespace }} namespace
  condition: and(succeeded(), eq(variables.NamespaceExists, 'false'), eq('${{ parameters.Validate }}', false))
  inputs:
    connectionType: Azure Resource Manager
    azureSubscriptionEndpoint: ${{ parameters.AzureSubscription }}
    azureResourceGroup: ${{ parameters.AksResourceGroupName }}
    kubernetesCluster: ${{ parameters.AksClusterName }}
    useClusterAdmin: true
    command: 'create'
    arguments: 'namespace ${{ parameters.Namespace }}'
