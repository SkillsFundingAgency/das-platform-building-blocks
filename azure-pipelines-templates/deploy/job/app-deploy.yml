parameters:
  ServiceConnection: ''
  Environment: ''
  AppServiceName: ''
  DeploymentPackagePath: ''
  DeploymentName: ''
  DependsOn: ''

jobs:
- deployment: ${{ parameters.DeploymentName }}
  dependsOn: ${{ parameters.DependsOn }}
  pool:
    name: DAS - Continuous Deployment
  environment: ${{ parameters.Environment }}
  strategy:
    runOnce:
      deploy:
        steps:
        - task: AzureRmWebAppDeployment@3
          displayName: Deploy Staging Slot - ${{ parameters.AppServiceName }}
          inputs:
            azureSubscription: ${{ parameters.ServiceConnection }}
            appType: webApp
            WebAppName: ${{ parameters.AppServiceName }}
            DeployToSlotFlag: true
            ResourceGroupName: $(ResourceGroupName)
            SlotName: staging
            Package: ${{ parameters.DeploymentPackagePath }}
            UseWebDeploy: true
            RemoveAdditionalFilesFlag: true

        - task: AzureAppServiceManage@0
          displayName: Start Staging Slot - ${{ parameters.AppServiceName }}
          inputs:
            azureSubscription: ${{ parameters.ServiceConnection }}
            Action: Start Azure App Service
            WebAppName: ${{ parameters.AppServiceName }}
            ResourceGroupName: $(ResourceGroupName)
            SpecifySlotOrASE: true
            Slot: staging

        - task: AzureAppServiceManage@0
          displayName: Start Swap Slots - ${{ parameters.AppServiceName }}
          inputs:
            azureSubscription: ${{ parameters.ServiceConnection }}
            Action: Start Swap With Preview
            WebAppName: ${{ parameters.AppServiceName }}
            ResourceGroupName: $(ResourceGroupName)
            SourceSlot: staging

        - task: AzureAppServiceManage@0
          displayName: Complete Swap Slot
          inputs:
            azureSubscription: ${{ parameters.ServiceConnection }}
            Action: Complete Swap
            WebAppName: ${{ parameters.AppServiceName }}
            ResourceGroupName: $(ResourceGroupName)
            SourceSlot: staging

        - task: AzureAppServiceManage@0
          displayName: Stop Staging Slot - ${{ parameters.AppServiceName }}
          condition: always()
          inputs:
            azureSubscription:  ${{ parameters.ServiceConnection }}
            Action: Stop Azure App Service
            WebAppName: ${{ parameters.AppServiceName }}
            SpecifySlotOrASE: true
            ResourceGroupName: $(ResourceGroupName)
            Slot: staging

        - task: AzurePowerShell@5
          displayName: Import-ApimSwaggerApiDefinition - $(ReservationsOuterApiAppServiceName)
          inputs:
            azureSubscription: SFA-DAS-DevTest-ARM
            ScriptPath: Infrastructure-Scripts/Import-ApimSwaggerApiDefinition.ps1
            ScriptArguments:
              -ApimResourceGroup $(ApimResourceGroup) `
              -InstanceName $(InstanceName) `
              -AppServiceResourceGroup $(ResourceGroupName) `
              -ApiVersionSetName $(ReservationsOuterApiVersionSetName) `
              -ApiPath $(ReservationsOuterApiPath) `
              -ApiBaseUrl $(ReservationsOuterApiBaseUrl) `
              -ProductId $(ReservationsProductId) `
              -ApplicationIdentifierUri $(ReservationsOuterApiIdentifierUri)
            azurePowerShellVersion: LatestVersion
            pwsh: true
