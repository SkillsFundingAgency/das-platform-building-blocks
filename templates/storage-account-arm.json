{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Name of the storage account"
      }
    },
    "storageAccountLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Recommendation: If using to store backup data, choose the paired region for resilience"
      }
    },
    "accountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ]
    },
    "accessTier": {
      "type": "string",
      "defaultValue": "",
      "allowedValues": [
        "Hot",
        "Cool",
        ""
      ],
      "metadata": {
        "description": "This setting is required if using BlobStorage as the storageKind, otherwise can be left blank"
      }
    },
    "storageKind": {
      "type": "string",
      "defaultValue": "Storage",
      "allowedValues": [
        "Storage",
        "StorageV2",
        "BlobStorage"
      ]
    },
    "subnetResourceIdList": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "A list of subnet resource ids."
      }
    },
    "containerArray": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description" : "A list of container names and if they are publicly accessible"
      }
    }
  },
  "variables": {
    "networkAclObject": {
      "bypass": "Logging, Metrics",
      "copy": [
        {
          "name": "virtualNetworkRules",
          "count": "[if(greater(length(parameters('subnetResourceIdList')), 0), length(parameters('subnetResourceIdList')), 1)]",
          "input": {
            "id": "[if(greater(length(parameters('subnetResourceIdList')), 0), parameters('subnetResourceIdList')[copyIndex('virtualNetworkRules')], json('null'))]",
            "action": "Allow"
          }
        }
      ],
      "defaultAction": "Deny"
    }
  },
  "resources": [
    {
      "apiVersion": "2019-04-01",
      "name": "[parameters('storageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[parameters('storageAccountLocation')]",
      "sku": {
        "name": "[parameters('accountType')]"
      },
      "kind": "[parameters('storageKind')]",
      "tags": {},
      "properties": {
        "encryption": {
          "services": {
            "blob": {
              "enabled": true
            },
            "file": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "[if(empty(parameters('accessTier')), json('null'), parameters('accessTier'))]",
        "supportsHttpsTrafficOnly": true,
        "networkAcls": "[if(greater(length(parameters('subnetResourceIdList')), 0), variables('networkAclObject'), json('null'))]"
      },
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "condition": "[greater(length(parameters('containerArray')), 0)]",
      "apiVersion": "2018-07-01",
      "name": "[parameters('containerArray')[copyIndex()].name]",
      "properties": {
        "publicAccess": "[parameters('containerArray')[copyIndex()].publicaccess]",
      },
      "copy": {
          "name": "containercopy",
          "count": "[length(parameters('containerArray'))]",
      },
      "dependsOn": [
          "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
  }
  ],
  "outputs": {
    "storageKey": {
      "type": "string",
      "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts',parameters('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]"
    },
    "storageConnectionString": {
      "type": "string",
      "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('storageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts',parameters('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value, ';EndpointSuffix=core.windows.net')]"
    }
  }
}
