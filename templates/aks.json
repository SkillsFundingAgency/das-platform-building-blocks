{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "clusterName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Managed Cluster resource."
      }
    },
    "kubernetesVersion": {
      "type": "string",
      "metadata": {
        "description": "The version of Kubernetes."
      }
    },
    "servicePrincipalClientId": {
      "type": "string"
    },
    "servicePrincipalSecret": {
      "type": "securestring"
    },
    "rbacClientAppId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The ID of the separately created client app service principal, ignored if adminGroupObjectId is set"
      }
    },
    "rbacServerAppId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The ID of the separately created server app service principal, ignored if adminGroupObjectId is set"
      }
    },
    "rbacServerAppSecret": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "The secret of the separately created server app service principal, ignored if adminGroupObjectId is set"
      }
    },
    "rbacTenantId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The tenant ID of for legacy AAD integration, ignored if adminGroupObjectId is set"
      }
    },
    "serviceCidr": {
      "type": "string"
    },
    "dnsServiceIp": {
      "type": "string"
    },
    "podCidr": {
      "type": "string",
      "defaultValue": "10.244.0.0/16"
    },
    "dockerBridgeCidr": {
      "type": "string",
      "defaultValue": "172.17.0.1/16"
    },
    "agentPoolName": {
      "type": "string",
      "defaultValue": "agentpool",
      "metadata": {
        "description": "The name of the default agent pool"
      }
    },
    "agentNodeCount": {
      "type": "int",
      "defaultValue": 3,
      "metadata": {
        "description": "The number of nodes for the cluster."
      },
      "minValue": 1,
      "maxValue": 50
    },
    "agentVMSize": {
      "type": "string",
      "defaultValue": "Standard_DS2_v2",
      "metadata": {
        "description": "The sku of the machines that will be used for the default agentpool."
      }
    },
    "subnetName": {
      "type": "string",
      "metadata": {
        "description": "Subnet name that will contain the aks CLUSTER"
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Name of an existing VNET that will contain this AKS deployment."
      }
    },
    "virtualNetworkResourceGroup": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "Name of the existing VNET resource group"
      }
    },
    "logAnalyticsResourceGroupName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "The name of the resource group for log analytics"
      }
    },
    "logAnalyticsWorkspaceName": {
      "type": "string",
      "metadata": {
        "description": "The name of the log analytics workspace that will be used for monitoring"
      }
    },
    "nodeResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "The name of the resource group used for nodes"
      }
    },
    "windowsProfile": {
      "type": "secureObject",
      "metadata": {
        "description": "adminUsername and adminPassword for Windows nodes, if windowsProfile not required pass in an empty object '{}'"
      }
    },
    "adminGroupObjectId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "If specified then AKS-managed Azure AD will be configured and the group this Object ID represents will have admin rights over the cluster",
        "documentation": "https://docs.microsoft.com/en-gb/azure/aks/managed-aad"
      }
    }
  },
  "variables": {
    "aadProfile": {
      "configured": {
          "clientAppID": "[parameters('rbacClientAppId')]",
          "serverAppID": "[parameters('rbacServerAppId')]",
          "serverAppSecret": "[parameters('rbacServerAppSecret')]",
          "tenantID": "[parameters('rbacTenantId')]"
        },
        "managed": {
          "managed": true,
          "adminGroupObjectIDs": "[array(parameters('adminGroupObjectId'))]"
        }
    },
    "vnetSubnetId": "[resourceId(parameters('virtualNetworkResourceGroup'),'Microsoft.Network/virtualNetworks/subnets',parameters('virtualNetworkName'),parameters('subnetName'))]",
    "logAnalyticsId": "[resourceId(parameters('logAnalyticsResourceGroupName'), 'Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]",
    "aksBaseProperties": {
        "kubernetesVersion": "[parameters('kubernetesVersion')]",
        "dnsPrefix": "[parameters('clusterName')]",
        "agentPoolProfiles": [
          {
            "name": "[parameters('agentPoolName')]",
            "count": "[parameters('agentNodeCount')]",
            "vmSize": "[parameters('agentVMSize')]",
            "osType": "Linux",
            "mode": "System",
            "vnetSubnetID": "[variables('vnetSubnetID')]",
            "type": "VirtualMachineScaleSets",
            "storageProfile": "ManagedDisks"
          }
        ],
        "addonProfiles": {
          "omsagent": {
            "enabled": true,
            "config": {
              "logAnalyticsWorkspaceResourceID": "[variables('logAnalyticsId')]"
            }
          }
        },
        "nodeResourceGroup": "[parameters('nodeResourceGroup')]",
        "enableRBAC": true,
        "servicePrincipalProfile": {
          "clientId": "[parameters('servicePrincipalClientId')]",
          "secret": "[parameters('servicePrincipalSecret')]"
        },
        "aadProfile": "[if(empty(parameters('adminGroupObjectId')), variables('aadProfile').configured, variables('aadProfile').managed)]",
        "networkProfile": {
          "networkPlugin": "kubenet",
          "serviceCidr": "[parameters('serviceCidr')]",
          "dnsServiceIP": "[parameters('dnsServiceIp')]",
          "podCidr": "[parameters('podCidr')]",
          "dockerBridgeCidr": "[parameters('dockerBridgeCidr')]"
        }
    },
    "windowsProfile": {
      "windowsProfile": "[parameters('windowsProfile')]"
    },
    "aksProperties": "[if(empty(parameters('windowsProfile')), variables('aksBaseProperties'), union(variables('aksBaseProperties'), variables('windowsProfile')))]"
  },
  "resources": [
    {
      "apiVersion": "2020-09-01",
      "type": "Microsoft.ContainerService/managedClusters",
      "location": "[resourceGroup().location]",
      "name": "[parameters('clusterName')]",
      "properties": "[variables('aksProperties')]"
    }
  ],
  "outputs": {
  }
}
